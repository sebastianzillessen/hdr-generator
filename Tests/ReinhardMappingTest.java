package Tests;

import Maths.AbstractMatrix;
import org.junit.Test;
import View.ToneMappers.ReinhardMapping;

import static junit.framework.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Created with IntelliJ IDEA.
 * User: sebastianzillessen
 * Date: 10.11.13
 * Time: 19:17
 * To change this template use File | Settings | File Templates.
 */
public class ReinhardMappingTest {
    AbstractMatrix luminance = AbstractMatrix.parse("1.9883 1.8714 1.6267 1.9632 2.1772 3.0845 3.0458 2.3024 1.9712 1.9338 2.2481 2.6861 3.3083 2.8878 3.2793 3.6498 3.3774 2.9873 2.7845 2.1219 1.4273 1.6823 1.0362 1.0110 1.0161 1.0657 1.0496 1.0123 1.0365 1.0054\n" +
            "2.0664 1.9322 1.8613 1.9694 2.1432 2.7569 3.1652 2.5194 2.0222 1.8468 2.2371 2.2621 3.1250 2.4431 3.1586 3.8146 3.5292 3.0202 3.2906 2.1135 1.4454 1.3949 1.0099 1.0125 1.0262 1.0348 1.4670 1.5697 1.0021 1.0140\n" +
            "2.2577 2.3077 1.9184 2.0440 2.2003 2.4376 3.2356 2.6432 2.2867 2.2060 2.2918 2.4662 3.1275 2.3692 3.6786 3.6827 3.9139 3.3233 3.4950 2.1653 1.7930 1.0970 1.0046 1.0267 1.0870 1.0245 1.6033 1.6840 1.0021 1.0357\n" +
            "2.1948 2.2227 2.0202 2.2351 2.3117 2.1838 2.9651 2.3508 2.2981 2.1541 2.0546 2.3577 3.2793 2.8807 4.0419 3.4216 3.5612 2.7894 2.8116 2.4485 1.7756 1.0155 1.0082 1.0600 1.1105 1.0292 1.5445 1.8002 1.0011 1.0403\n" +
            "2.3427 2.2733 2.1812 2.2169 2.2262 2.2686 2.6877 2.6678 2.3728 2.2335 2.2886 2.2033 3.4781 2.8770 3.9079 3.5738 3.0363 2.7659 2.6539 2.4526 1.0159 1.0046 1.0132 1.0668 1.1455 1.0796 1.4051 1.4143 1.0200 1.0377\n" +
            "2.2249 2.2872 2.0752 2.1012 2.1899 2.2365 2.1473 2.1501 2.8681 2.2543 2.1756 2.0802 2.8667 2.5550 3.6510 3.5751 3.2538 3.0866 2.8199 2.1939 1.0014 1.0032 1.0314 1.0817 1.1194 1.0286 1.9790 2.0919 1.0237 1.0410\n" +
            "2.2197 2.1892 2.2175 1.9584 2.0139 1.9640 1.8275 2.2577 2.9192 2.3657 2.2242 2.0681 2.8417 2.0085 3.1886 3.6577 3.2277 3.4313 2.5976 2.1289 1.0090 1.0131 1.0696 1.0785 1.1191 1.0302 1.7174 1.9446 1.0259 1.0441\n" +
            "1.9662 1.9497 2.3023 2.2450 1.9443 2.2792 2.2751 2.0500 2.2082 3.2047 2.1756 2.3101 2.7788 1.9475 3.2566 3.4856 3.0962 3.3499 3.1794 2.0371 1.0565 1.0629 1.0800 1.0632 1.1498 1.0335 1.6907 1.6821 1.0317 1.0496\n" +
            "1.7531 1.9019 2.0516 2.0773 1.6890 1.8355 2.2017 2.0304 2.2983 3.0589 2.1918 3.0165 3.0376 2.3706 3.5856 3.4606 3.2995 2.9206 3.0916 2.4882 1.1304 1.0291 1.0623 1.0998 1.1226 1.0253 1.5860 1.6366 1.0486 1.0453\n" +
            "1.9127 1.8639 1.8853 1.8046 1.8003 2.0329 2.1190 2.4585 2.0955 2.2224 3.2744 2.8424 3.5906 2.5093 3.8491 3.2941 2.9003 2.8564 2.6893 2.5407 1.7060 1.0177 1.0636 1.1190 1.1232 1.0270 1.7097 1.8860 1.0366 1.0495\n" +
            "1.9494 1.8779 1.7663 1.7744 1.8243 2.0277 2.1380 2.8804 2.2388 2.4294 3.1936 2.9565 3.7600 2.7243 4.2304 2.7456 2.3964 2.9622 2.8795 2.3771 1.2863 1.0352 1.0824 1.1503 1.1279 1.0222 1.4908 1.6629 1.0265 1.0474\n" +
            "2.1204 2.1528 1.8432 2.0121 2.0316 2.0741 2.3689 3.2800 2.8704 2.9806 3.0115 2.9199 3.5783 3.0448 3.8512 2.4161 1.9301 3.0169 2.7436 2.2628 1.0972 1.0174 1.1134 1.1138 1.1042 1.0180 1.3388 1.3350 1.0018 1.0302\n" +
            "1.8438 1.9376 2.1578 2.3014 2.2509 2.1647 2.2237 3.0101 3.0805 3.0003 3.0825 2.9879 2.9765 3.2617 2.9611 2.3116 1.8894 3.0651 3.6150 1.9345 1.0645 1.0064 1.3882 1.0621 1.0843 1.0320 0.9989 1.0097 1.0034 1.0503\n" +
            "2.0586 1.8244 2.2811 2.1320 2.1135 2.2599 2.2714 3.0932 2.9334 2.9509 3.1384 2.6925 2.8704 3.0538 2.7061 2.4880 2.1623 3.2517 3.7163 1.2087 1.1204 1.0172 1.2895 1.0311 1.0976 1.0202 1.1686 1.1598 1.0026 1.0121\n" +
            "1.9582 1.8607 2.2333 2.1387 2.2110 2.2549 2.4272 2.8736 2.9263 2.8110 2.7662 1.5431 1.5695 2.9182 2.8920 2.6368 2.2394 3.0008 2.4684 1.2565 1.0760 1.0219 1.0833 1.1501 1.8930 1.0881 1.0058 1.0063 1.0165 1.0026\n" +
            "1.8369 1.9594 2.2319 2.2974 2.3357 1.9316 2.3594 2.9892 2.9482 2.8567 3.0265 2.2119 1.7503 2.1379 2.7801 2.6080 2.3412 3.9125 2.5529 3.1968 1.0236 1.0026 1.0365 1.8167 1.9162 1.0842 1.0232 1.0085 1.0027 1.0057\n" +
            "2.0005 1.9644 2.2233 2.1286 2.2692 2.2150 2.9956 2.9373 2.9833 3.0832 3.2313 2.7814 1.9100 2.0080 2.2522 2.3986 2.2915 3.6953 3.0122 3.4493 1.0450 1.0027 1.0180 1.0182 1.1375 1.0193 1.0068 1.0028 1.0056 1.0112\n" +
            "2.1688 2.2103 2.2593 2.1935 1.9117 2.2897 3.0102 2.9771 3.0185 3.0674 3.0057 2.9130 2.2316 1.9678 2.3881 2.3144 1.8716 3.7146 2.2374 2.2450 1.0310 1.0027 1.0033 1.0038 1.0098 1.0051 1.0033 1.0028 1.0035 1.0056\n" +
            "2.2655 2.1387 2.3124 2.1907 2.1033 2.2112 3.0068 2.9776 3.0060 3.0725 2.8746 2.9523 2.2551 2.3371 2.4261 2.1448 1.8363 3.6547 2.9016 1.0473 1.0222 1.0135 1.0342 1.0516 1.0087 1.0042 1.0035 1.0028 1.0029 1.0028\n" +
            "2.2304 2.2041 2.4491 2.1891 2.2971 2.2728 2.9682 3.0114 2.9845 2.9207 3.0960 2.9962 2.5039 2.9384 2.1939 1.9737 1.9216 3.5945 2.6535 1.0208 1.0823 1.0176 1.0189 1.0705 1.0269 1.0042 1.0032 1.0028 1.0029 1.0049\n" +
            "2.2440 2.3768 2.5926 2.2365 2.3166 2.9679 2.9662 2.9803 3.0298 2.8913 3.1088 2.9286 3.0488 2.9603 1.9886 1.9103 1.7872 3.0600 2.3035 1.0022 1.0519 1.0084 1.0164 1.0691 1.0633 1.0039 1.0034 1.0030 1.0029 1.0036\n" +
            "2.1546 2.9625 3.0235 3.0817 2.7034 3.0843 2.9543 3.0259 3.0864 2.8940 2.9876 2.8048 3.0997 3.3729 1.8938 1.8519 1.8119 3.4443 1.7152 1.0018 1.0167 1.0035 1.0161 1.0758 1.0535 1.0031 1.0032 1.0031 1.0033 1.0036\n" +
            "2.6762 2.7371 3.0300 2.8966 2.8618 3.0721 2.8950 2.9481 3.1207 2.9807 3.0350 3.0587 2.8728 3.8952 1.8809 1.7645 1.5122 3.3199 2.0591 1.0064 1.0120 1.0028 1.0164 1.0630 1.0154 1.0029 1.0034 1.0033 1.0030 1.0028\n" +
            "2.4959 2.5060 3.0518 2.7888 2.9773 3.0478 3.0504 3.0034 3.0032 2.8791 2.9918 3.1306 2.9390 3.6524 1.8513 1.6123 1.2682 3.6202 2.1944 1.0063 1.0091 1.0037 1.0169 1.0574 1.0140 1.0031 1.0036 1.0032 1.0031 1.0029\n" +
            "2.2387 2.9109 3.0758 2.8304 2.8033 2.8989 2.9732 3.0080 3.5418 2.8769 3.0752 3.0474 2.9678 3.5650 1.8249 1.6120 1.2688 3.4302 3.7579 1.0093 1.0171 1.0031 1.0244 1.0157 1.0027 1.0032 1.0038 1.0037 1.0033 1.0030\n" +
            "2.2493 2.5119 3.2339 3.0206 2.8328 2.9517 3.1164 2.9103 3.2183 2.8521 3.0171 3.6043 2.6471 3.7287 1.8003 1.4230 1.2887 3.0878 3.6005 1.0031 1.0074 1.0030 1.0174 1.0218 1.0048 1.0043 1.0048 1.0035 1.0034 1.0032\n" +
            "2.2731 2.1133 2.8636 2.7799 2.9787 2.8305 3.0253 3.0299 3.0179 2.9190 2.9956 3.2435 2.2323 3.6972 1.8725 1.4840 1.2728 3.1622 2.7319 1.0001 1.0035 1.0049 1.0146 1.0377 1.0026 1.0038 1.0040 1.0032 1.0033 1.0033\n" +
            "1.8500 2.2012 3.2070 2.8222 3.0629 3.0356 3.4718 3.5385 2.9605 2.9775 2.8337 3.1456 2.0083 3.5301 1.8337 1.5834 1.4673 2.4587 3.2199 1.2341 1.0154 1.0028 1.0165 1.0117 1.0039 1.0031 1.0032 1.0030 1.0029 1.0030\n" +
            "1.8337 2.2476 3.2749 2.9333 3.1561 3.0539 4.1358 3.6720 2.9525 3.0780 2.8340 2.9447 2.0966 3.5195 1.8052 1.5126 1.6392 2.5380 2.9894 2.7128 1.0518 1.0030 1.0036 1.0044 1.0065 1.0030 1.0036 1.0034 1.0029 1.0031\n" +
            "2.2857 2.2844 2.5617 2.9109 3.0372 2.9058 3.9370 4.0347 3.0335 2.8631 2.9796 3.0571 2.1501 3.8661 1.8156 1.5034 1.6869 2.1844 3.0331 3.4559 1.0316 1.0029 1.0145 1.1284 1.0697 1.0035 1.0043 1.0034 1.0029 1.0032\n" +
            "2.2180 2.3529 2.4101 3.0018 2.9955 2.9746 3.9141 3.6701 3.0744 2.8821 3.0679 2.7079 2.1150 3.7078 1.7756 1.3715 1.5910 1.9983 3.0740 3.2796 1.2036 1.0148 1.0344 1.0825 1.2799 1.0108 1.0030 1.0029 1.0029 1.0031\n" +
            "2.3302 2.2441 2.3560 2.9545 3.5974 3.2574 3.6401 3.1497 3.0266 3.0375 3.1532 2.6585 2.3750 3.4640 1.7770 1.4587 1.7471 2.0640 3.3153 3.0073 1.4045 1.0137 1.0266 1.0095 1.0526 1.0589 1.0149 1.0028 1.0028 1.0029\n" +
            "2.2847 2.4109 2.8151 2.8285 2.9549 3.3388 3.3287 2.9281 3.1667 3.0256 2.9819 2.7108 2.8689 3.7302 1.9062 1.4086 1.6013 2.1323 3.1165 2.6287 1.6411 1.0689 1.0713 1.0514 1.0158 1.0148 1.0222 1.0027 1.0094 1.0059\n" +
            "2.2359 2.9458 2.9937 3.0766 2.8832 3.7554 3.2285 3.7085 2.8585 3.0816 3.0125 2.3549 2.9918 3.6607 1.9051 1.5896 1.6419 2.1051 3.2953 2.4920 1.8820 1.0881 1.1746 1.0756 1.0588 1.0137 1.0090 1.0045 1.0975 1.1441\n" +
            "2.1340 3.2686 2.8675 3.2031 3.7278 3.6253 3.5619 3.5429 2.9898 3.0622 2.6750 2.8323 3.6683 3.6569 1.8884 1.7189 1.3868 2.2754 3.5375 2.4183 1.6535 1.0568 1.3106 1.1032 1.1093 1.0398 1.0029 1.0028 1.1285 1.1680\n" +
            "2.1727 3.1385 2.7626 3.2099 3.6946 3.6219 3.5431 3.7566 3.0666 2.6406 2.6661 2.9143 3.5710 3.7477 1.9969 1.7187 1.4017 2.4896 2.8536 2.3130 1.4762 1.0271 1.2971 1.1524 1.1791 1.0660 1.0127 1.0027 1.1161 1.1755\n" +
            "2.0284 2.5210 3.0726 3.0044 3.9444 3.4133 3.8135 2.9844 2.4856 2.4886 2.4951 2.7212 2.9093 3.2199 2.1903 1.7993 1.5735 2.3999 2.8750 2.2659 1.3869 1.0233 1.3242 1.1339 1.1286 1.0730 1.0219 1.0026 1.1052 1.1701\n" +
            "3.0784 2.9451 2.9729 2.9015 2.8984 3.4875 3.3534 3.0543 2.3111 2.4551 2.6531 2.9316 2.9320 2.9917 2.1307 1.8636 1.4863 1.9046 2.8319 2.3012 1.2541 1.0305 1.2327 1.1827 1.1665 1.0683 1.0342 1.0026 1.0993 1.1577\n" +
            "3.1444 2.8873 2.6840 2.8727 3.0256 2.9727 3.0837 2.9951 2.4225 2.9107 3.0723 3.0082 2.8495 3.0071 1.9677 1.8506 1.4401 1.8233 2.8014 2.6576 1.2150 1.0540 1.1565 1.2383 1.1796 1.0501 1.0174 1.0033 1.1082 1.2017\n" +
            "2.8779 2.8776 3.2921 3.0022 3.0981 3.0527 2.9444 3.0006 3.1933 3.1723 2.7805 3.7014 2.7714 3.1777 1.8926 1.6862 1.5723 1.7398 3.2033 2.6337 1.2508 1.0780 1.1519 1.1794 1.1773 1.0647 1.0377 1.0025 1.0847 1.1760\n" +
            "3.0986 3.1222 2.9387 3.0366 3.0581 3.3069 3.3187 2.9234 3.1904 2.9725 3.0375 3.3063 2.9800 3.2822 1.9141 1.5295 1.5330 1.7748 3.1961 2.4468 1.2358 1.1525 1.1435 1.1200 1.1104 1.2156 1.0652 1.0024 1.0618 1.1108\n" +
            "2.9799 2.9547 2.9530 2.9890 2.9684 3.0876 2.8492 2.9491 2.9917 3.0107 2.9700 3.5522 2.8948 3.3453 1.8978 1.4142 1.4569 1.8295 3.2843 2.2060 1.2468 1.0793 1.1498 1.1215 1.1010 1.1497 1.0632 1.0085 1.1088 1.1832\n" +
            "3.0130 2.9290 2.8745 2.8770 2.9474 3.0118 2.9451 2.9600 3.0320 2.8859 3.1022 3.5746 2.9559 3.3462 1.7648 1.3602 1.4713 1.8016 3.9791 2.0648 1.2231 1.0234 1.1593 1.1744 1.1057 1.0890 1.0457 1.0042 1.0950 1.2275\n" +
            "3.0134 3.0073 2.8144 2.8704 2.9906 2.9228 3.1878 3.0868 3.0575 2.8827 3.3564 3.3403 2.9325 3.1188 1.7242 1.3727 1.6937 1.9529 3.7274 2.0141 1.2142 1.0085 1.1198 1.2220 1.1680 1.0800 1.0625 1.0121 1.0964 1.2337\n" +
            "3.0388 2.9934 2.8598 3.0781 3.0963 2.9213 3.4915 2.8401 3.0857 3.0099 3.5379 3.1771 2.9511 2.8932 1.6312 1.3594 1.8814 2.1626 2.9392 1.6164 1.1589 1.0024 1.0714 1.1719 1.1605 1.0786 1.0614 1.0080 1.0456 1.1071");

    @Test
    public void testGetValues() throws Exception {
        ReinhardMapping t = new ReinhardMapping(0.18);
        short[][] s = t.getValues(luminance.toArray());
        assertEquals(s.length, luminance.rows());
        assertEquals(s[0].length, luminance.cols());
    }

    public short max(short[][] m) {
        short max = m[0][0];
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m[i].length; j++) {
                max = (short) Math.max(max, m[i][j]);
            }
        }
        return max;
    }

    public short min(short[][] m) {
        short min = m[0][0];
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m[i].length; j++) {
                min = (short) Math.min(min, m[i][j]);
            }
        }
        return min;
    }

    @Test
    public void testGetValuesMinMax() throws Exception {
        ReinhardMapping t = new ReinhardMapping(0.72);
        short[][] s = t.getValues(luminance.toArray());

        assertTrue(max(s) > 200);
        assertEquals(0, min(s));
    }
}
